"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/ethereum.ts":
/*!*****************************!*\
  !*** ./src/lib/ethereum.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ethereum: function() { return /* binding */ Ethereum; }\n/* harmony export */ });\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3 */ \"(app-pages-browser)/./node_modules/web3/lib/esm/index.js\");\n/* harmony import */ var _ethereumjs_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ethereumjs/util */ \"(app-pages-browser)/./node_modules/@ethereumjs/util/dist/esm/index.js\");\n/* harmony import */ var _ethereumjs_tx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ethereumjs/tx */ \"(app-pages-browser)/./node_modules/@ethereumjs/tx/dist/esm/index.js\");\n/* harmony import */ var _ethereumjs_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ethereumjs/common */ \"(app-pages-browser)/./node_modules/@ethereumjs/common/dist/esm/index.js\");\n/* harmony import */ var _kdf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kdf */ \"(app-pages-browser)/./src/lib/kdf.ts\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n\nclass Ethereum {\n    async deriveAddress(accountId, derivation_path) {\n        const publicKey = await (0,_kdf__WEBPACK_IMPORTED_MODULE_4__.deriveChildPublicKey)((0,_kdf__WEBPACK_IMPORTED_MODULE_4__.najPublicKeyStrToUncompressedHexPoint)(), accountId, derivation_path);\n        const address = await (0,_kdf__WEBPACK_IMPORTED_MODULE_4__.uncompressedHexPointToEvmAddress)(publicKey);\n        return {\n            publicKey: Buffer.from(publicKey, \"hex\"),\n            address\n        };\n    }\n    async queryGasPrice() {\n        const maxFeePerGas = await this.web3.eth.getGasPrice();\n        const maxPriorityFeePerGas = await this.web3.eth.getMaxPriorityFeePerGas();\n        return {\n            maxFeePerGas,\n            maxPriorityFeePerGas\n        };\n    }\n    async getBalance(accountId) {\n        const balance = await this.web3.eth.getBalance(accountId);\n        const ONE_ETH = 1000000000000000000n;\n        return Number(balance * 100n / ONE_ETH) / 100;\n    }\n    trimAddress(address) {\n        return \"\".concat(address.slice(0, 6), \"...\").concat(address.slice(-4));\n    }\n    async createPayload(sender, receiver, amount) {\n        const common = new _ethereumjs_common__WEBPACK_IMPORTED_MODULE_3__.Common({\n            chain: this.chain_id\n        });\n        // Get the nonce & gas price\n        const nonce = await this.web3.eth.getTransactionCount(sender);\n        const { maxFeePerGas, maxPriorityFeePerGas } = await this.queryGasPrice();\n        // Construct transaction\n        const transactionData = {\n            nonce,\n            gasLimit: 21000,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            to: receiver,\n            value: BigInt(this.web3.utils.toWei(amount, \"ether\")),\n            chain: this.chain_id\n        };\n        // Return the message hash\n        const transaction = _ethereumjs_tx__WEBPACK_IMPORTED_MODULE_2__.FeeMarketEIP1559Transaction.fromTxData(transactionData, {\n            common\n        });\n        const payload = transaction.getHashedMessageToSign();\n        return {\n            transaction,\n            payload\n        };\n    }\n    async requestSignatureToMPC(wallet, contractId, path, ethPayload, transaction, sender) {\n        // Ask the MPC to sign the payload\n        const payload = Array.from(ethPayload.reverse());\n        const [big_r, big_s] = await wallet.callMethod({\n            contractId,\n            method: \"sign\",\n            args: {\n                payload,\n                path,\n                key_version: 0\n            },\n            gas: \"250000000000000\"\n        });\n        // reconstruct the signature\n        const r = Buffer.from(big_r.substring(2), \"hex\");\n        const s = Buffer.from(big_s, \"hex\");\n        const candidates = [\n            0n,\n            1n\n        ].map((v)=>transaction.addSignature(v, r, s));\n        const signature = candidates.find((c)=>c.getSenderAddress().toString().toLowerCase() === sender.toLowerCase());\n        if (!signature) {\n            throw new Error(\"Signature is not valid\");\n        }\n        if (signature.getValidationErrors().length > 0) throw new Error(\"Transaction validation errors\");\n        if (!signature.verifySignature()) throw new Error(\"Signature is not valid\");\n        return signature;\n    }\n    // This code can be used to actually relay the transaction to the Ethereum network\n    async relayTransaction(signedTransaction) {\n        const serializedTx = (0,_ethereumjs_util__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(signedTransaction.serialize());\n        const relayed = await this.web3.eth.sendSignedTransaction(serializedTx);\n        return relayed.transactionHash;\n    }\n    constructor(chain_rpc, chain_id){\n        this.web3 = new web3__WEBPACK_IMPORTED_MODULE_0__.Web3(chain_rpc);\n        this.chain_id = chain_id;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/ethereum.ts\n"));

/***/ })

});